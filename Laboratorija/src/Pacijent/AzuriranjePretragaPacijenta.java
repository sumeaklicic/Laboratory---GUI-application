/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package Pacijent;

import java.util.List;

/**
 *
 * @author Korisnik
 */
public class AzuriranjePretragaPacijenta extends javax.swing.JInternalFrame {
private int selektovaniPacijentId = -1;
private database.Pacijent_Kontroler kontroler = new database.Pacijent_Kontroler();

    /**
     * Creates new form AzuriranjePretragaPacijenta
     */
    public AzuriranjePretragaPacijenta() {
        initComponents();
        getContentPane().setBackground(new java.awt.Color(230, 245, 255));
        setClosable(true);
        jTable1.getSelectionModel().addListSelectionListener(e -> {
        int red = jTable1.getSelectedRow();
        if (red >= 0) {
            Object vrednost = jTable1.getValueAt(red, 0);
            if (vrednost != null) {
                try {
                    selektovaniPacijentId = Integer.parseInt(vrednost.toString());
                } catch (NumberFormatException ex) {
                    selektovaniPacijentId = -1;
                }
            } else {
                selektovaniPacijentId = -1;
            }
        } else {
            selektovaniPacijentId = -1;
        }
    });
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        unosTxt = new javax.swing.JTextField();
        trazi = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        jLabel1.setText("Unesite ime pacijenta");

        trazi.setBackground(new java.awt.Color(51, 51, 255));
        trazi.setForeground(new java.awt.Color(255, 255, 255));
        trazi.setText("TRAZI");
        trazi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                traziActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "Ime", "Prezime", "BrojTelefona"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jButton1.setBackground(new java.awt.Color(51, 51, 255));
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("ISPISI SVE NALAZE");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(51, 51, 255));
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("AŽURIRAJ");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(0, 0, 255));
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("DODAJNALAZ");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(80, 80, 80)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(44, 44, 44)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)
                        .addGap(32, 32, 32)
                        .addComponent(unosTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(81, 81, 81)
                        .addComponent(trazi, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(22, 22, 22)))
                .addContainerGap(29, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 550, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(unosTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(trazi, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 64, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addGap(54, 54, 54))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    if (selektovaniPacijentId == -1) {
        javax.swing.JOptionPane.showMessageDialog(this, "Odaberite pacijenta.");
        return;
    }

    Nalaz.pregledSvihNalaza pregled = new Nalaz.pregledSvihNalaza();
    try {
        List<OsnovneKlase.Nalaz> nalazi = new database.NalazKontroler().getNalaziZaPacijenta(selektovaniPacijentId);

        javax.swing.table.DefaultTableModel model = new javax.swing.table.DefaultTableModel(
            new Object[][]{}, new String[]{"ID", "Pacijent_ID", "Datum", "Naziv"}
        );

        for (OsnovneKlase.Nalaz n : nalazi) {
            model.addRow(new Object[]{n.getIdNalaza(), n.getPacijentId(), n.getDatum(), n.getNaziv()});
        }

        pregled.postaviModeleNalaza(model);
        getParent().add(pregled);
        pregled.setVisible(true);
        pregled.toFront();
    } catch (Exception ex) {
        ex.printStackTrace();
    }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void traziActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_traziActionPerformed
     String ime = unosTxt.getText().trim();
    if (ime.isEmpty()) return;

    try {
        List<OsnovneKlase.Pacijent> lista = kontroler.pretraziPacijente(ime);
        javax.swing.table.DefaultTableModel model = new javax.swing.table.DefaultTableModel(
            new Object[][]{}, new String[]{"ID", "Ime", "Prezime", "BrojTelefona"}
        );

        for (OsnovneKlase.Pacijent p : lista) {
            model.addRow(new Object[]{p.getId(), p.getIme(), p.getPrezime(), p.getBrojTelefona()});
        }

        jTable1.setModel(model);

    } catch (Exception ex) {
        ex.printStackTrace();
    }
    }//GEN-LAST:event_traziActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
    // Ako se trenutno uređuje neka ćelija, završi uređivanje i sačuvaj podatke
        if (jTable1.isEditing()) {
            jTable1.getCellEditor().stopCellEditing();
        }
        int red = jTable1.getSelectedRow();
    if (red == -1) {
        javax.swing.JOptionPane.showMessageDialog(this, "Odaberite pacijenta.");
        return;
    }

    try {
        int id = (int) jTable1.getValueAt(red, 0);
        String ime = jTable1.getValueAt(red, 1).toString();
        String prezime = jTable1.getValueAt(red, 2).toString();
        String broj = jTable1.getValueAt(red, 3).toString();

        kontroler.azurirajPacijenta(id, ime, prezime, broj);
        javax.swing.JOptionPane.showMessageDialog(this, "Pacijent ažuriran.");

        String imeZaPretragu = unosTxt.getText().trim();
        if (!imeZaPretragu.isEmpty()) {
            List<OsnovneKlase.Pacijent> lista = kontroler.pretraziPacijente(imeZaPretragu);
            javax.swing.table.DefaultTableModel model = new javax.swing.table.DefaultTableModel(
                new Object[][]{}, new String[]{"ID", "Ime", "Prezime", "BrojTelefona"}
            );

            for (OsnovneKlase.Pacijent p : lista) {
                model.addRow(new Object[]{p.getId(), p.getIme(), p.getPrezime(), p.getBrojTelefona()});
            }
            jTable1.setModel(model);
        }

        } catch (Exception ex) {
            ex.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this, "Greška prilikom ažuriranja.");
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        if (selektovaniPacijentId == -1) {
        javax.swing.JOptionPane.showMessageDialog(this, "Odaberite pacijenta.");
        return;
    }
    Nalaz.dodavanjeNalaza dodavanjeNalazaProzor = new Nalaz.dodavanjeNalaza();


    dodavanjeNalazaProzor.setPacijentId(selektovaniPacijentId);


    this.getDesktopPane().add(dodavanjeNalazaProzor);
    dodavanjeNalazaProzor.setVisible(true);
    dodavanjeNalazaProzor.toFront();
    }//GEN-LAST:event_jButton3ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton trazi;
    private javax.swing.JTextField unosTxt;
    // End of variables declaration//GEN-END:variables
}
